---
name: Continous integration
on: [push, pull_request]
jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - run: ls -la /tmp/
      - uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: phpunit
      - name: Install dependencies including dev
        run: composer install
      - name: Tests
        run: composer test
      - uses: codecov/codecov-action@v2
        with:
          files: ./tests/coverage/coverage.xml
          flags: unittests
          name: codecov-umbrella
  code_checks:
    name: Check code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: symplify/easy-coding-standard, phpstan, phpunit
      - name: Test code style
        run: ecs
      - name: Install dependencies
        run: composer install --no-dev
      # This is disabled due to errors in the baseline, re-enable it when those have been fully cleaned.
      # - name: Static analysis
      #   run: phpstan analyse src
      - name: Install dependencies including dev
        run: composer install
      # We run static analysis with dev dependencies due to baseline errors, when those have been cleaned we run them on
      # src and tests separately, this allows us to detect accidental usage of dev dependencies in src.
      - name: Static analysis (phpstan)
        run: phpstan
      - name: Static analysis (psalm)
        run: vendor/bin/psalm
      # This is disabled due to errors in the baseline, re-enable it when those have been fully cleaned.
      # - name: Static analysis of tests
      #   run: phpstan analyse tests
# Disabled, this should be moved to a separate CI workflow that triggers on a new tag.
#  docs:
#    name: Docs
#    needs:
#      - release
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: '8.1'
#          tools: phpDocumentor
#      - name: Generate docs
#        run: phpdoc run
#      - name: Deploy docs to pages
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: ./docs
  release:
    name: Automated release
    needs:
      - code_checks
      - tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - run: >
          npx
          -p "@semantic-release/commit-analyzer"
          -p "@semantic-release/release-notes-generator"
          -p "@semantic-release/github"
          -p conventional-changelog-conventionalcommits
          -p semantic-release
          -- semantic-release 
          --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
